
# The project's basic metadata and dependencies
[project]

# General project information, the Project supports Python 3.11, 3.12, and 3.13; the version of the project is automatically determined from the
# latest Git tag using the Hatch-VCS plugin and the read me is dynamically generated using the Hatch Fancy PyPI Readme plugin (this  is necessary,
# because Hatch cannot access the root directory of the repository while building the wheel, which is where the read me is located; Hatch first builds
# the source distribution from the files in the project directory, from where it can access top-level repository files, and then builds the wheel from
# the source distribution by extracting it into a temporary directory, from where it cannot access the top-level repository files)
name = "corelay"
description = """\
    CoRelAy is a tool to compose small-scale (single-machine) analysis pipelines to generate analysis data which can then be visualized using
    ViRelAy.\
    """
keywords = [
    "CoRelAy",
    "Spectral Relevance Analysis",
    "SpRAy",
    "Explainable AI",
    "XAI",
    "Interpretability",
    "Machine Learning",
    "Deep Learning",
    "Artificial Intelligence"
]
license = "GPL-3.0-or-later AND LGPL-3.0-or-later"
requires-python = ">=3.11.12"
dynamic = [
    "readme",
    "version"
]

# The maintainers (people actively working on the project) and authors (people who have contributed to the project)
maintainers = [
    {name = "Christopher J. Anders", email = "contact@cjanders.de"},
    {name = "David Neumann", email = "david.neumann@lecode.de"}
]
authors = [
    {name = "Christopher J. Anders", email = "contact@cjanders.de"},
    {name = "David Neumann", email = "david.neumann@lecode.de"},
    {name = "Sebastian Lapuschkin", email = "sebastian.lapuschkin@hhi.fraunhofer.de"},
    {name = "Pattarawat Chormai", email = "pat.chormai@gmail.com"}
]

# The project's dependencies, which are included in the requirements of the published package
dependencies = [
    "click>=8.1.8,<9.0.0",
    "h5py>=3.13.0,<4.0.0",
    "matplotlib>=3.10.1,<4.0.0",
    "metrohash-python>=1.1.3.3,<2.0.0",
    "numpy>=2.2.4,<3.0.0",
    "scikit-image>=0.25.2,<1.0.0",
    "scikit-learn>=1.6.1,<2.0.0",
    "scipy>=1.15.2,<2.0.0"
]

# The PyPI classifiers that describe the project
classifiers = [
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed"
]

# The URLs to the documentation, the repository, the issue tracker, and the changelog
[project.urls]
Documentation = "https://corelay.readthedocs.io/en/latest/"
Repository = "https://github.com/virelay/corelay.git"
Issues = "https://github.com/virelay/corelay/issues"
Changelog = "https://github.com/virelay/corelay/blob/main/CHANGELOG.md"

# Configuration specified to the UV Python package manager
[tool.uv]

# Dependencies that are only installed during the development of the project and are not included in the requirements of the published package
dev-dependencies = [

    # Dependencies required for building the documentation
    "sphinx>=8.2.3,<9.0.0",
    "sphinx-copybutton>=0.5.2,<1.0.0",
    "sphinx-rtd-theme>=3.0.2,<4.0.0",
    "sphinxcontrib.bibtex>=2.6.3,<3.0.0",
    "sphinxcontrib.datatemplates>=0.11.0,<1.0.0",

    # Dependencies required for testing
    "tox>=4.25.0,<5.0.0",
    "tox-uv>=1.25.0,<2.0.0",
    "coverage>=7.8.0,<8.0.0",
    "pytest-cov>=6.1.1,<7.0.0",
    "pytest>=8.3.5,<9.0.0",
    "setuptools>=78.1.0,<79.0.0",

    # Dependencies required for linting
    "flake8>=7.2.0,<8.0.0",
    "pylint>=3.3.6,<4.0.0"
]

# Configures which build system is used by UV to build the project
[build-system]
requires = [
    "hatchling>=1.27.0,<2.0.0",
    "hatch-vcs>=0.4.0,<1.0.0",
    "hatch-fancy-pypi-readme>=24.1.0,<25.0.0"
]
build-backend = "hatchling.build"

# Configures the Hatch-VCS plugin that is used to dynamically determine the version of the project based on the current Git tag
[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"
raw-options = { root = ".." }

# Configures the Hatch-VCS build hook, which is used to write the version of the project to the version file
[tool.hatch.build.hooks.vcs]
version-file = "corelay/version.py"

# Configures the Hatch Fancy PyPI Readme plugin to compose the content of the read me file from the project's read me file, which is located in the
# root directory of the repository
[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "../README.md"
